Parameters:
  NameOfService: 
    Description: "the name of service this stack is used for"
    Type: String 
  InstanceTypeParameter:
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m1.small
      - m1.large
  KeyName:
    Description: name of EC2 login key 
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  AmiRegionMap: 
    us-east-1:
      MyAMI1: "ami-0427090fd1714168b"
    us-east-2:
      MyAMI1: "ami-00db8dadb36c9815e"
    us-west-1:
      MyAMI1: "ami-03ed1381c73a5660e"

Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AmiRegionMap
        - !Ref AWS::Region
        - MyAMI1
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref VprofileSG

  VprofileSG: 
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh and http to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  
Outputs:
  PrintSomeInfo:
    Value: !GetAtt
      - MyInstance
      - PublicDnsName